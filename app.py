from InquirerPy import inquirer
import requests
import json
import time
import pygame
import webbrowser
import subprocess
import shutil
import sys
from bs4 import BeautifulSoup


BASE_URL = "https://fogplay.mts.ru/computer/"
AUDIO_FILE = "./Kuvaev_1[Master]+–≤–æ–∫–∞–ª13–¥–±.–æ–±—Ä.mp3"

pygame.init()
pygame.mixer.init()


def load_json():
    with open("data.json", "r", encoding="utf-8") as f:
        return json.load(f)


def play_audio():
    try:
        pygame.mixer.music.load(AUDIO_FILE)
        pygame.mixer.music.play(-1)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –∑–≤—É–∫–∞: {e}")


def extract_play_link(html, target_code):
    soup = BeautifulSoup(html, "html.parser")
    cards = soup.find_all("div", class_="card")

    for card in cards:
        title = card.find("p", class_="card__title")
        if title and target_code in title.text:
            play_button = card.find("a", class_="button js-play")
            if play_button and "href" in play_button.attrs:
                return "https://fogplay.mts.ru" + play_button["href"]
    return None


def save_json(data):
    with open("data.json", "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2, ensure_ascii=False)


def move_to_top(path):
    data = load_json()
    for i, item in enumerate(data):
        if item.get("path") == path:
            # –£–¥–∞–ª—è–µ–º –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
            obj = data.pop(i)
            data.insert(0, obj)
            save_json(data)
            print(f"üìå –û–±—ä–µ–∫—Ç '{path}' –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞.")
            break


def open_in_private(url):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º/–∏–Ω–∫–æ–≥–Ω–∏—Ç–æ —Ä–µ–∂–∏–º–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω –±—Ä–∞—É–∑–µ—Ä."""
    browsers = [
        ("chrome", ["--incognito"]),
        ("google-chrome", ["--incognito"]),
        ("chromium", ["--incognito"]),
        ("edge", ["--inprivate"]),
        ("msedge", ["--inprivate"]),
        ("firefox", ["--private-window"]),
    ]

    for browser, args in browsers:
        path = shutil.which(browser)
        if path:
            try:
                subprocess.Popen([path] + args + [url])
                print(f"üåê –û—Ç–∫—Ä—ã—Ç–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ ({browser})")
                return
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {browser}: {e}")

    # fallback ‚Äî –æ–±—ã—á–Ω—ã–π webbrowser
    import webbrowser

    print("‚ö† –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –±—Ä–∞—É–∑–µ—Ä, –æ—Ç–∫—Ä—ã–≤–∞—é –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º.")
    webbrowser.open(url)


def check_links(data):
    found_any = False
    for item in data:
        path = item.get("path")
        codes = item.get("code")

        if isinstance(codes, str):
            codes = [codes]
        if not path or not codes:
            continue

        url = BASE_URL + path.strip("/") + "/"

        try:
            response = requests.get(url, timeout=10)
            response.raise_for_status()
            html = response.text

            for code in codes:
                if code in html:
                    play_url = extract_play_link(html, code)
                    if play_url:
                        print(f"\nüîî –ù–ê–ô–î–ï–ù–û: {code} –Ω–∞ {url}")
                        print(f"‚ñ∂ –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏: {play_url}")
                        play_audio()
                        open_in_private(play_url)
                        input("‚è∏ –ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–≤—É–∫ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
                        pygame.mixer.music.stop()
                        move_to_top(path)  # üìå –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –Ω–∞—á–∞–ª–æ
                        found_any = True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ {url}: {e}")

    return found_any


def select_data():
    data = load_json()
    choices = [item["path"] for item in data]
    choices.insert(0, "üîé –ü—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ")

    selected = inquirer.select(
        message="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞:",
        choices=choices,
        default="üîé –ü—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ",
    ).execute()

    if selected == "üîé –ü—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ":
        return data
    else:
        return [item for item in data if item["path"] == selected]


def main():
    selected_data = select_data()

    while True:
        try:
            found = check_links(selected_data)
            if not found:
                print("\n‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                choice = input(
                    "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø—É—Ç–∏, –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ 60 —Å–µ–∫—É–Ω–¥...\n"
                )
                if choice.strip() == "":
                    selected_data = select_data()
                    continue
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")

        time.sleep(60)


if __name__ == "__main__":
    main()
