# selector.py
"""
–ú–æ–¥—É–ª—å –≤—ã–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:
- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä –ø—É—Ç–∏ –ø–æ–∏—Å–∫–∞ (InquirerPy)
- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ JSON
"""

import json
from InquirerPy import inquirer
from init import DATA_JSON_FILE
from storage import load_json


def select_data() -> list:
    """
    –î–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –ø—É—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞.
    –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω "–ü—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ" ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫.
    –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—É—Ç—å ‚Äî –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –µ–≥–æ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç JSON.

    :return: —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–≤—Å–µ–≥–¥–∞ —Å–ø–∏—Å–æ–∫, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç)
    """
    data = load_json()
    choices = [item["path"] for item in data]
    choices.insert(0, "üîé –ü—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ")

    selected = inquirer.select(
        message="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞:",
        choices=choices,
        default="üîé –ü—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ",
    ).execute()

    if selected == "üîé –ü—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ":
        return data
    else:
        # –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤ –Ω–∞—á–∞–ª–æ
        selected_item = next((item for item in data if item["path"] == selected), None)
        if selected_item:
            data.remove(selected_item)
            data.insert(0, selected_item)

            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
            with open(DATA_JSON_FILE, "w", encoding="utf-8") as f:
                json.dump(data, f, ensure_ascii=False, indent=2)

        return [selected_item] if selected_item else []
